# This is a basic workflow to help you get started with Actions

name: CITF

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [windows-2019]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
    
    - name: Restore NuGet packages
      run: nuget restore BugGuardian.MVC.sln
    
    - name: Build the Solution
      run: msbuild BugGuardian.MVC.sln /p:Configuration=Release
      
    - name: WhiteSource Unified Agent Scan
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        WS_APIKEY: ${{secrets.APIKEY}}
        WS_USERKEY: ${{secrets.USERKEY}}
        WS_WSS_URL: https://app.whitesourcesoftware.com/agent
        WS_PRODUCTNAME: GH_${{github.event.repository.name}}
        WS_PROJECTNAME: ${{github.ref}}_Prioritize
        WS_ENABLEIMPACTANALYSIS: true
        WS_RESOLVEALLDEPENDENCIES: false
        WS_NUGET_RESOLVEDEPENDENCIES: true
        WS_NUGET_RUNPRESTEP: true
        WS_FILESYSTEMSCAN: false
        WS_GENERATEPROJECTDETAILSJSON: true
        WS_EXCLUDES: '**/build/** **/tests/**'
      run: |
        curl -LJO https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar
        echo Unified Agent downloaded successfully
        CSPROJ=$(basename $(find ./src -type f -wholename "*.csproj" ! -wholename "*build*" ! -wholename "*test*") .csproj)
        DLL=$(find ./ -type f -wholename "*/bin/Release/*/$CSPROJ.dll" ! -wholename "*build*" ! -wholename "*test*")
        echo $DLL will be added to appPath
        java -jar wss-unified-agent.jar -appPath $DLL -d ./src
         
      
    
